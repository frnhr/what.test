[tool.poetry]
name = "prodselect"
version = "0.1.0"
description = ""
authors = ["Fran Hr≈æenjak <fran.hrzenjak@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
django = ">=4.2,<5.1"
dj-database-url = "^2.1.0"
psycopg = {version = ">=3.1,<3.2", extras = ["binary"]}
gunicorn = ">=21.2"
django-storages = ">=1.14"
boto3 = ">=1.34"
dash = "^2.16.1"
faker = "^24.7.1"
djangorestframework = "^3.15.1"
django-filter = "^24.2"
wsgitypes = "^0.0.4"
dash-bootstrap-components = "^1.5.0"
pydantic-settings = "^2.2.1"
dash-extensions = "^1.0.14"
dash-ag-grid = "^31.0.1"
whitenoise = {version = "^6.6.0", extras = ["brotli"]}


[tool.poetry.group.dev.dependencies]
pre-commit = "^3.7.0"
watchdog = "^4.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 80
target-version = "py312"
# https://beta.ruff.rs/docs/rules
lint.select = ["ALL"]
lint.ignore = [
    "ANN002",  # Missing type annotation for *{name}
    "ANN003",  # Missing type annotation for **{name}
    "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed in {name}
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D103",  # Missing docstring in public function
    "D104",  # Missing docstring in public package
    "D105",  # Missing docstring in magic method
    "D106",  # Missing docstring in public nested class
    "D107",  # Missing docstring in __init__
    "D205",  # 1 blank line required between summary line and description
    "D400",  # First line should end with a period
    "ERA001",  # Found commented-out code
    "EM101",  # Exception must not use a string literal, assign to variable first
    "RET505",  # Unnecessary `else` after `return` statement
    "RET504",  # Unnecessary assignment to `selection` before `return` statement
    "TRY003",  # Avoid specifying long messages outside the exception clas
    "TCH001",  # Move application import {} into a type-checking block
    "TCH002",  # Move third-party import {} into a type-checking block
    "TCH003",  # Move standard library import {} into a type-checking block
    "TD002",  # Missing author in TODO
    "TD003",  # Missing issue link on the line following this TODO
    "TD004",  # Missing colon in TODO
    "FIX",  # Prevent the use of TODO, FIXME, etc. in comments
    # conflicting rules:
    "D203",
    "D212",
    # deprecated rules:
    "ANN101",
    "ANN102",

]
lint.fixable = ["ALL"]
fix = true
